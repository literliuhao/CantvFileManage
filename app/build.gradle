apply plugin: 'com.android.application'

//ext.appReleaseDir = ""
//def loadProperties() {
//    def proFile = file("../local.properties")
//    Properties p = new Properties()
//    proFile.withInputStream { stream->
//        p.load(stream)
//    }
//    appReleaseDir = p.appReleaseDir
//}
//
//loadProperties()
ext.SIGN_CONFIG_FILE = ['sign_828.properties'] // 签名配置文件
apply from: 'sign.gradle' // 自动签名配置，勿删

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.3"

    signingConfigs {
        config {
            keyAlias 'CANTV'
            keyPassword 'cantv2016'
            storeFile file('/home/devuser/keystore/can.jks')
            storePassword 'cantv2016'
        }
    }

    defaultConfig {
        applicationId "com.cantv.media"
        minSdkVersion 19
        targetSdkVersion 23
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        signingConfig signingConfigs.config
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    productFlavors {
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
//        //修改生成的apk名字
//        variant.outputs.each { output ->
//            def oldFile = output.outputFile
//            if (variant.buildType.name in ['release']) {
//                def releaseApkName = 'mediaCenter_v' + variant.versionCode + ".apk";
//                output.outputFile = new File(oldFile.parent+"/release", releaseApkName);
//            }
//        }
        //修改生成的apk名字
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            if (variant.buildType.name in ['release']) {
                def releaseApkName = 'CantvFileManager_v' + variant.versionCode + ".apk";
                if (project.hasProperty("appReleaseDir")) {
                    File releasePath = new File(project.property("appReleaseDir"), getDate());
                    output.outputFile = new File(releasePath, releaseApkName);
                } else {
                    output.outputFile = new File(oldFile.parent, releaseApkName)
                }
            }
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:21.0.3'
    compile files('libs/blur.jar')
    compile files('libs/core.jar')
    compile files('libs/cybergarage-http.jar')
    compile files('libs/glide-3.7.0.jar')
    compile files('libs/greendao-1.3.7.jar')
    compile files('libs/jcifs-1.3.17.jar')
}


def getDate() {
    return formatDateTime('yyyyMMdd');
}
def getDateTime() {
    return formatDateTime('yyyyMMddHHmmss')
}
def formatDateTime(String format) {
    return new Date().format(format)
}
