apply plugin: 'com.android.application'

ext.appReleaseDir = ""
def loadProperties() {
    def proFile = file("../local.properties")
    Properties p = new Properties()
    proFile.withInputStream { stream->
        p.load(stream)
    }
    appReleaseDir = p.appReleaseDir
}

loadProperties()

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.3"

    signingConfigs {
        config {
            keyAlias 'CANTV'
            keyPassword 'cantv2016'
            storeFile file('/home/devuser/keystore/CANTV.keystore')
            storePassword 'cantv2016'
        }
    }

    defaultConfig {
        applicationId "com.cantv.media"
        minSdkVersion 19
        targetSdkVersion 23
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        signingConfig signingConfigs.config
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    productFlavors {
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all{ variant->
        variant.outputs.each { output->
            def oldFile = output.outputFile
            def newName = '';
            if(variant.buildType.name.equals('release')){
                // APK输出文件名规则：aiyou-版本名-市场-release.apk
                def releaseApkName = 'mediaCenter-release.apk'
                // appReleaseDir对应local.properties里面定义的路径，再加上日期（格式：201503011230）文件夹
                output.outputFile = new File(appReleaseDir + '/' + releaseTime(), releaseApkName)
            }
            if(variant.buildType.name.equals('beta')){
            }
            if(variant.buildType.name.equals('debug')){
            }
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:21.0.3'
    compile files('libs/blur.jar')
    compile files('libs/core.jar')
    compile files('libs/cybergarage-http.jar')
    compile files('libs/glide-3.7.0.jar')
    compile files('libs/greendao-1.3.7.jar')
    compile files('libs/jcifs-1.3.17.jar')
}


def getDate() {
    return formatDateTime('yyyyMMdd');
}
def getDateTime() {
    return formatDateTime('yyyyMMddHHmmss')
}
def formatDateTime(String format) {
    return new Date().format(format)
}
def formatVersionCodeString(int versionCode) {
    versionCode.toString().toCharArray().join('.').toString()
}

android {
    applicationVariants.all { variant ->
        //修改生成的apk名字
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            if (variant.buildType.name in ['release']) {
                def releaseApkName = 'mediaCenter_v' + variant.versionCode + "_" + getDateTime() + ".apk";
                if (project.hasProperty("appReleaseDir")) {
                    File releasePath = new File(project.property("appReleaseDir"), getDate());
                    output.outputFile = new File(releasePath, releaseApkName);
                } else {
                    output.outputFile = new File(oldFile.parent, releaseApkName)
                }
            }
        }
    }
}