apply plugin: 'com.android.application'
apply plugin: 'cn.can.apk.generator'

apkGenerator {
    outputFileName "CantvFileManager/{date}/CantvFileManager-v{versionString}.{flavorCode}-{flavor}-{buildType}-{date}{hour}"
    outputFilePath "@appReleaseDir"
    signingConfPath "@sign_config_path"
    versionNamePattern "v{versionString}.{flavorCode}-{buildType}-{date}"
    signingMapping = ['sign828': "sign_828.properties", 'sign628': "sign_628.properties", 'default': "sign_can.properties"]
}

android {
    compileSdkVersion 22
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.cantv.media"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 162
        buildConfigField("String", "CANTV", "\"can\"")
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        can {}
        other {
            buildConfigField("String", "CANTV", "\"other\"")
        }
        sign828 {}
        sign628 {}
    }

    lintOptions {
        abortOnError false
    }
}

//ext.SIGN_CONFIG_FILE = ["sign828": 'sign_828.properties', "sign628": 'sign_628.properties'] // 签名配置文件
//apply from: 'sign.gradle' // 自动签名配置，勿删
//android.applicationVariants.all { variant ->
//    //修改生成的apk名字
//    variant.outputs.each { output ->
//        def oldFile = output.outputFile
//        if (variant.buildType.name in ['release']) {
//            def releaseApkName = "CantvFileManager_${variant.productFlavors[0].name}_v${variant.versionCode}.apk";
//            if (project.hasProperty("appReleaseDir")) {
//                File releasePath = new File(project.property("appReleaseDir"), "CantvFileManager/${getDate()}");
//                output.outputFile = new File(releasePath, releaseApkName);
//            } else {
//                output.outputFile = new File(oldFile.parent, releaseApkName)
//            }
//        }
//    }
//}

dependencies {
    compile 'com.android.support:support-v4:21.0.3'
    compile files('libs/blur.jar')
    compile files('libs/core.jar')
    compile files('libs/cybergarage-http.jar')
    compile files('libs/glide-3.7.0.jar')
    compile files('libs/greendao-1.3.7.jar')
    compile files('libs/jcifs-1.3.17.jar')
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
//    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.jakewharton:butterknife:7.0.0'
}

//def getDate() {
//    return formatDateTime('yyyyMMdd');
//}
//
//def getDateTime() {
//    return formatDateTime('yyyyMMddHHmmss')
//}
//
//def formatDateTime(String format) {
//    return new Date().format(format)
//}
